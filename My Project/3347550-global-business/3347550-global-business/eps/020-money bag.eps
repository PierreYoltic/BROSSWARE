%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.16.0 (https://cairographics.org)
%%CreationDate: Wed Aug 12 12:54:17 2020
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 3
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
50 dict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 0 0 384 384
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
q
281.602 226.137 m 274.531 221.25 l 274.531 180.348 l 274.531 144 249.793
 112.316 214.531 103.5 c 229.531 49.5 l 154.531 49.5 l 169.531 103.5 l 134.266
 112.316 109.531 144 109.531 180.348 c 109.531 221.25 l 102.43 226.141 l
 93.234 232.469 87.746 242.918 87.746 254.078 c 87.746 272.812 102.934 288
 121.668 288 c 262.324 288 l 281.059 288 296.246 272.812 296.246 254.078
 c 296.246 254.047 l 296.246 242.902 290.773 232.469 281.602 226.137 c h
281.602 226.137 m W n
[0.75 0 0 0.75 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.658824 0.670588 1 ]
      /C1 [ 0.658824 0.670588 1 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.658824 0.670588 1 ]
      /C1 [ 0.980392 0.784314 1 ]
      /N 1
   >>
   ]
   /Bounds [ 0.00000036422 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 255.992996 66 255.992996 384 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
q
103.906 180.348 m 103.906 218.293 l 99.238 221.508 l 88.52 228.887 82.121
 241.062 82.121 254.078 c 82.121 275.883 99.859 293.625 121.668 293.625 
c 262.324 293.625 l 284.129 293.625 301.871 275.887 301.871 254.047 c 301.871
 241.055 295.488 228.891 284.801 221.508 c 280.156 218.301 l 280.156 180.348
 l 280.156 143.281 256.289 110.875 221.445 99.629 c 236.93 43.875 l 147.129
 43.875 l 162.617 99.629 l 127.77 110.875 103.906 143.281 103.906 180.348
 c h
161.93 55.125 m 222.129 55.125 l 210.254 97.875 l 173.805 97.875 l h
170.277 109.125 m 213.781 109.125 l 246.27 117.543 268.906 146.73 268.906
 180.348 c 268.906 224.203 l 278.406 230.766 l 286.055 236.047 290.621 244.75
 290.621 254.078 c 290.621 269.684 277.926 282.375 262.324 282.375 c 121.668
 282.375 l 106.062 282.375 93.371 269.684 93.371 254.078 c 93.371 244.766
 97.949 236.055 105.621 230.773 c 115.156 224.207 l 115.156 180.348 l 115.156
 146.73 137.793 117.543 170.277 109.125 c h
151.496 180.375 m 151.496 166.727 162.598 155.625 176.246 155.625 c 186.371
 155.625 l 186.371 134.25 l 197.621 134.25 l 197.621 155.625 l 226.871 155.625
 l 226.871 166.875 l 176.246 166.875 l 168.801 166.875 162.746 172.93 162.746
 180.375 c 162.746 187.82 168.801 193.875 176.246 193.875 c 207.746 193.875
 l 221.391 193.875 232.496 204.977 232.496 218.625 c 232.496 232.273 221.391
 243.375 207.746 243.375 c 197.621 243.375 l 197.621 264.75 l 186.371 264.75
 l 186.371 243.375 l 157.121 243.375 l 157.121 232.125 l 207.746 232.125
 l 215.188 232.125 221.246 226.07 221.246 218.625 c 221.246 211.18 215.188
 205.125 207.746 205.125 c 176.246 205.125 l 162.598 205.125 151.496 194.023
 151.496 180.375 c h
11.254 190.129 m 0.004 190.016 l 0.043 186.164 0.199 182.273 0.465 178.441
 c 11.691 179.227 l 11.438 182.832 11.293 186.5 11.254 190.129 c h
13.848 222.73 m 17.391 243.434 24.477 263.191 34.902 281.461 c 25.133 287.039
 l 14.055 267.625 6.523 246.629 2.758 224.629 c h
12.328 211.926 m 1.148 213.148 l 0.727 209.332 0.422 205.445 0.23 201.598
 c 11.465 201.047 l 11.645 204.668 11.934 208.328 12.328 211.926 c h
12.773 168.375 m 1.617 166.918 l 7.602 121.094 30.051 78.91 64.84 48.141
 c 99.934 17.098 145.094 0 191.996 0 c 218.844 0 244.82 5.438 269.203 16.16
 c 288.59 24.688 306.211 36.207 321.746 50.484 c 321.746 27 l 332.996 27
 l 332.996 70.125 l 289.871 70.125 l 289.871 58.875 l 314.254 58.875 l 280.852
 28.078 237.91 11.25 191.996 11.25 c 101.512 11.25 24.465 78.797 12.773 
168.375 c h
372.41 180.887 m 383.641 180.207 l 383.871 184.043 383.992 187.941 383.996
 191.793 c 372.746 191.805 l 372.742 188.172 372.629 184.5 372.41 180.887
 c h
369.781 159.227 m 380.848 157.203 l 381.539 160.98 382.125 164.836 382.59
 168.664 c 371.422 170.016 l 370.984 166.414 370.434 162.785 369.781 159.227
 c h
372.434 202.711 m 383.664 203.367 l 377.746 304.656 293.555 384 191.996
 384 c 137.723 384 86.961 361.527 50.621 321.898 c 50.621 344.25 l 39.371
 344.25 l 39.371 301.125 l 82.496 301.125 l 82.496 312.375 l 57.16 312.375
 l 91.484 350.875 140.031 372.75 191.996 372.75 c 287.605 372.75 366.863
 298.059 372.434 202.711 c h
367.492 148.562 m 362.336 127.664 353.539 108.02 341.348 90.172 c 350.637
 83.828 l 363.59 102.785 372.934 123.66 378.414 145.867 c h
367.492 148.562 m W n
[0.75 0 0 0.75 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.0901961 0.309804 0.639216 ]
      /C1 [ 0.0901961 0.309804 0.639216 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.0901961 0.309804 0.639216 ]
      /C1 [ 0.690196 0.266667 0.686275 ]
      /N 1
   >>
   ]
   /Bounds [ 0.00000011981 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 256 0 256 512 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
Q Q
showpage
%%Trailer
end
%%EOF
