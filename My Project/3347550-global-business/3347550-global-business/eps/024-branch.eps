%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.16.0 (https://cairographics.org)
%%CreationDate: Wed Aug 12 12:54:20 2020
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 3
%%BoundingBox: 0 0 384 384
%%EndComments
%%BeginProlog
50 dict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 0 0 384 384
%%EndPageSetup
q 0 0 384 384 rectclip
1 0 0 -1 0 384 cm q
q
131.852 5.648 74.914 208.266 re W n
[0.749154 0 0 0.749154 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.658824 0.670588 1 ]
      /C1 [ 0.658824 0.670588 1 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.658824 0.670588 1 ]
      /C1 [ 0.980392 0.784314 1 ]
      /N 1
   >>
   ]
   /Bounds [ 0.00000036422 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 226 7.539 226 285.539001 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
q
170.059 72.324 74.914 141.59 re W n
[0.749154 0 0 0.749154 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.658824 0.670588 1 ]
      /C1 [ 0.658824 0.670588 1 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.658824 0.670588 1 ]
      /C1 [ 0.980392 0.784314 1 ]
      /N 1
   >>
   ]
   /Bounds [ 0.00000036422 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 277 96.539001 277 285.539001 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
q
52.359 261.77 m 104.516 235.418 l 57.215 141.809 l 5.059 168.16 l h
52.359 261.77 m W n
[0.749154 0 0 0.749154 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.658824 0.670588 1 ]
      /C1 [ 0.658824 0.670588 1 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.658824 0.670588 1 ]
      /C1 [ 0.980392 0.784314 1 ]
      /N 1
   >>
   ]
   /Bounds [ 0.00000036422 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 73.132004 189.289001 73.132004 349.420013 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
q
331.305 261.77 m 279.152 235.418 l 326.453 141.809 l 378.605 168.16 l h
331.305 261.77 m W n
[0.749154 0 0 0.749154 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.658824 0.670588 1 ]
      /C1 [ 0.658824 0.670588 1 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.658824 0.670588 1 ]
      /C1 [ 0.980392 0.784314 1 ]
      /N 1
   >>
   ]
   /Bounds [ 0.00000036422 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 439 189.289001 439 349.42099 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
q
191.785 197.805 m 88.969 197.805 5.617 281.156 5.617 383.973 c 377.949 
383.973 l 377.949 281.156 294.602 197.805 191.785 197.805 c h
191.785 197.805 m W n
[0.749154 0 0 0.749154 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.588235 0.819608 0.952941 ]
      /C1 [ 0.588235 0.819608 0.952941 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.588235 0.819608 0.952941 ]
      /C1 [ 0.8 1 0.956863 ]
      /N 1
   >>
   ]
   /Bounds [ 0.00000083866 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 256 264.039001 256 512.539001 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
1 g
126.605 255.117 m 137.094 234.891 l 174.555 237.887 l 178.297 264.855 l
 160.32 273.098 l 173.055 300.066 l 155.074 303.062 l h
126.605 255.117 m f
367.969 323.695 m 340.117 333.777 l 333.375 360.746 l 292.918 362.246 l
 268.945 324.039 l 235.234 320.293 l 203.02 279.09 l 223.996 246.125 l 309.395
 239.652 l 336.07 261.418 356.598 290.43 367.969 323.695 c h
367.969 323.695 m f
128.855 327.035 m 118.367 354.004 l 89.148 345.016 l 70.422 364.492 l 70.422
 364.582 l 6.652 364.246 l 11.262 320.48 31.031 281.238 60.613 251.863 c
 90.648 265.605 l 90.648 286.582 l 107.129 292.574 l h
128.855 327.035 m f
q
152.078 22.504 m 163.316 22.504 l 163.316 33.742 l 152.078 33.742 l h
174.555 33.742 m 185.789 33.742 l 185.789 22.504 l 174.555 22.504 l h
152.078 56.215 m 163.316 56.215 l 163.316 44.977 l 152.078 44.977 l h
174.555 56.215 m 185.789 56.215 l 185.789 44.977 l 174.555 44.977 l h
201.523 89.18 m 190.285 89.18 l 190.285 100.414 l 201.523 100.414 l h
223.996 89.18 m 212.762 89.18 l 212.762 100.414 l 223.996 100.414 l h
201.523 111.652 m 190.285 111.652 l 190.285 122.891 l 201.523 122.891 l
 h
223.996 111.652 m 212.762 111.652 l 212.762 122.891 l 223.996 122.891 l
 h
201.523 133.379 m 190.285 133.379 l 190.285 144.617 l 201.523 144.617 l
 h
223.996 133.379 m 212.762 133.379 l 212.762 144.617 l 223.996 144.617 l
 h
201.523 155.105 m 190.285 155.105 l 190.285 166.34 l 201.523 166.34 l h
223.996 155.105 m 212.762 155.105 l 212.762 166.34 l 223.996 166.34 l h
50.062 165.973 m 32.676 174.758 l 37.746 184.789 l 55.129 176.004 l h
47.879 204.848 m 65.266 196.062 l 60.195 186.031 l 42.812 194.816 l h
57.68 224.238 m 75.062 215.453 l 69.996 205.422 l 52.609 214.207 l h
338.305 260.227 m 367.598 294.793 383.566 338.152 383.566 383.973 c 372.328
 383.973 l 372.328 365.535 369.547 347.734 364.387 330.965 c 344.84 338.043
 l 337.801 366.207 l 289.887 367.98 l 265.629 329.324 l 232.266 325.617 
l 196.148 279.422 l 220.766 240.734 l 293.941 235.191 l 224.832 187.59 132.414
 194.18 70.598 250.254 c 96.266 261.996 l 96.266 282.645 l 110.855 287.949
 l 135.117 326.434 l 121.711 360.91 l 90.805 351.402 l 72.801 370.125 l 
11.793 369.801 l 11.426 374.477 11.238 379.203 11.238 383.973 c 0 383.973
 l 0 338.105 16.004 294.707 45.348 260.125 c 0.828 165.613 l 63.039 134.176
 l 100.75 215.078 l 108.961 210.637 117.473 206.816 126.234 203.637 c 126.234
 0.027 l 212.387 0.027 l 212.387 66.703 l 250.594 66.703 l 250.594 201.34
 l 261.785 204.93 272.609 209.547 282.953 215.152 c 321.797 134.207 l 384
 165.637 l h
61.945 258.652 m 36.133 285.387 18.48 320.043 13.031 358.57 c 68.039 358.863
 l 87.496 338.629 l 115.023 347.098 l 122.594 327.637 l 103.402 297.195 
l 85.031 290.516 l 85.031 269.211 l h
90.992 220.742 m 57.754 149.438 l 15.652 170.711 l 53.512 251.086 l 64.859
 239.289 77.355 229.195 90.992 220.742 c h
164.438 66.703 m 201.148 66.703 l 201.148 11.266 l 137.469 11.266 l 137.469
 199.961 l 146.266 197.375 155.273 195.422 164.438 194.121 c h
239.355 77.941 m 175.676 77.941 l 175.676 192.863 l 197.32 191.074 218.758
 192.875 239.355 198.105 c h
327.395 248.359 m 328.336 249.301 329.262 250.258 330.18 251.215 c 369.078
 170.688 l 326.969 149.41 l 292.699 220.816 l 305.141 228.543 316.781 237.746
 327.395 248.359 c h
307.43 245.438 m 227.227 251.516 l 209.895 278.758 l 238.203 314.969 l 
272.262 318.754 l 295.953 356.512 l 328.945 355.289 l 335.391 329.512 l 
360.738 320.336 l 349.641 290.973 331.102 265.234 307.43 245.438 c h
352.25 174.758 m 334.863 165.973 l 329.797 176.004 l 347.18 184.789 l h
342.113 194.816 m 324.73 186.031 l 319.66 196.062 l 337.047 204.848 l h
314.934 205.422 m 309.863 215.453 l 327.246 224.238 l 332.316 214.207 l
 h
292.867 109.566 m 292.867 120.801 l 319.676 120.801 l 319.676 93.992 l 
308.438 93.992 l 308.438 101.172 l 286.469 79.203 l 278.523 87.148 l 300.938
 109.562 l 292.867 109.562 l h
88.453 109.566 m 80.379 109.566 l 102.797 87.148 l 94.852 79.203 l 72.883
 101.172 l 72.883 93.996 l 61.645 93.996 l 61.645 120.805 l 88.453 120.805
 l h
184.438 268.223 m 167.828 275.836 l 181.309 304.387 l 152.207 309.238 l
 120.18 255.301 l 133.824 228.992 l 179.496 232.645 l h
172.16 261.488 m 169.609 243.125 l 140.367 240.789 l 133.031 254.93 l 157.945
 296.887 l 164.801 295.746 l 152.812 270.355 l h
172.16 261.488 m W n
[0.749154 0 0 0.749154 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.0901961 0.309804 0.639216 ]
      /C1 [ 0.0901961 0.309804 0.639216 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.0901961 0.309804 0.639216 ]
      /C1 [ 0.690196 0.266667 0.686275 ]
      /N 1
   >>
   ]
   /Bounds [ 0.00000011981 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 256.289001 0.039 256.289001 512.539001 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
Q Q
showpage
%%Trailer
end
%%EOF
